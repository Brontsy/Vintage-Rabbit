@model IList<Vintage.Rabbit.Web.Models.Themes.ThemeListItemViewModel>
@{
    ViewBag.Title = "Style";
}


<div class="styles">
    
    <p>
        Planning kids birthday parties can be exhausting, time consuming and costly, we all just want to create the most memorable, dazzling and enchanting party that will light up those little faces with glee. This is what it’s all about, that moment those little eyes glisten with pride and wonderment. At Vintage Rabbit we live to create those memories for everyone. We have developed pre styled themes to save you money and time, there is no need to pay for a stylist, to buy expensive decorations and spend days making paper pom poms. Each package has been carefully designed with a mix of items for hire and purchase, which can be booked as a package or simply by looking through our images and adding single items to your cart.
    </p>
    <p>
        All the items will be delivered to your door, we also offer delivery, setup and pickup options or you can opt to collect and drop off to our warehouse in McKinnon.
    </p>
    <p>
        Looking for something completely different? We have our amazing Creative Director on hand to collaborate with you on any design you may have in mind. Click @Html.RouteLink("here", Routes.CreativeDirector) to read more
    </p>

    <div class="row frozen">        
        @{var frozen = Model.First(o => o.UrlTitle == "frozen");}
        <div class="col-12">
            <a href="@Url.RouteUrl(Routes.Themes.Theme, new { themeName = frozen.UrlTitle })">
                <img src="/content/images/themes/frozen/header.jpg" />
            </a>
        </div>
        <div class="col-4">            

            <a href="@Url.RouteUrl(Routes.Themes.Theme, new { themeName = frozen.UrlTitle })">
                <span>@frozen.Title</span>
            </a>
        </div>
    </div>


        <ol class="row">


            @foreach (var theme in Model.Where(o => o.UrlTitle != "frozen"))
            {
                <li class="col-4">
                    <a href="@Url.RouteUrl(Routes.Themes.Theme, new { themeName = theme.UrlTitle })">
                        <img src="@theme.ImageUrl" />
                        <span>@theme.Title</span>
                    </a>
                </li>
            }

        </ol>


</div>
