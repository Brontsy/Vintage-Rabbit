@model Vintage.Rabbit.Web.Models.Payment.DeliveryAddressViewModel
@{
    ViewBag.Title = "Checkout - Devliery";
}


<div class="checkout delivery-information">

    <ol class="float-container checkout-breadcrumb">

        <li class="checkout">
            <div class="triangle-left"></div>
            <div class="triangle"></div>
            <h3>Checkout</h3>
        </li>
        <li class="login-register completed">
            <div class="triangle-left"></div>
            <div class="triangle"></div>
            <h3>Login / Register</h3>
        </li>
        <li class="address active">
            <div class="triangle-left"></div>
            <div class="triangle"></div>
            <h3>Address</h3>
        </li>
        <li class="payment">
            <div class="triangle-left"></div>
            <div class="triangle"></div>
            <h3>Payment</h3>
        </li>
        <li class="confirmation">
            <div class="triangle-left"></div>
            <div class="triangle"></div>
            <h3>Complete</h3>
        </li>

    </ol>

    <div class="row">

        <div class="col-8">
            <h2>Hire Delivery Information</h2>
            <p>
                We offer delivery and pickup for the items that your are hiring for @Model.DeliveryCost each way. If you would like to pick up and / or return the items yourself you are more then welcome to, we are located in McKinnon.
            </p>
            @using (Html.BeginRouteForm(Routes.Checkout.Devliery, new { }, FormMethod.Post, new { @class = "" }))
            {
                

                <ol class="row">

                    <li class="col-12 pickup-dropoff-yourself@(Model.IsDropoff || Model.IsPickup ? " hidden" : string.Empty)">
                        <strong>If you would like to pickup and return the items at no cost, simply click "Save &amp; continue"</strong>
                    </li>

                    <li class="col-6">
                        <select class="hidden">
                            <option>Collection...</option>
                            <option>Vintage Rabbit delivers the items ($30)</option>
                            <option>You pick the items up</option>
                        </select>

                        <div class="checkboxes">
                            @Html.CheckBoxFor(o => o.IsDropoff)
                            @Html.LabelFor(o => o.IsDropoff)
                        </div>
                    </li>

                    <li class="col-6">
                        <select class="hidden">
                            <option>Return...</option>
                            <option>Vintage Rabbit picks the items up ($30)</option>
                            <option>You dropoff the items up</option>
                        </select>
                        <div class="checkboxes ">
                            @Html.CheckBoxFor(o => o.IsPickup)
                            @Html.LabelFor(o => o.IsPickup)
                        </div>
                    </li>

                    <li class="col-6 deliver-field@(Model.IsDropoff || Model.IsPickup ? string.Empty : " hidden")">
                        @Html.TextBoxFor(o => o.FirstName, new { placeholder = "First name*" })
                        @Html.ValidationMessageFor(o => o.FirstName)
                    </li>
                    <li class="col-6 deliver-field@(Model.IsDropoff || Model.IsPickup ? string.Empty : " hidden")">
                        @Html.TextBoxFor(o => o.LastName, new { placeholder = "Last name*" })
                        @Html.ValidationMessageFor(o => o.LastName)
                    </li>
                    <li class="col-12 deliver-field@(Model.IsDropoff || Model.IsPickup ? string.Empty : " hidden")">
                        @Html.TextBoxFor(o => o.PhoneNumber, new { placeholder = "Phone number*" })
                        @Html.ValidationMessageFor(o => o.PhoneNumber)
                    </li>
                    <li class="col-12 deliver-field@(Model.IsDropoff || Model.IsPickup ? string.Empty : " hidden")">
                        @Html.TextBoxFor(o => o.Address, new { placeholder = "Address*" })
                        @Html.ValidationMessageFor(o => o.Address)
                    </li>
                    <li class="col-12 deliver-field@(Model.IsDropoff || Model.IsPickup ? string.Empty : " hidden")">
                        @Html.TextBoxFor(o => o.SuburbCity, new { placeholder = "Suburb / city*" })
                        @Html.ValidationMessageFor(o => o.SuburbCity)
                    </li>
                    <li class="col-12 deliver-field@(Model.IsDropoff || Model.IsPickup ? string.Empty : " hidden")">
                        @Html.TextBoxFor(o => o.Postcode, new { placeholder = "Postcode*" })
                        @Html.ValidationMessageFor(o => o.Postcode)
                    </li>
                    <li class="col-12 deliver-field@(Model.IsDropoff || Model.IsPickup ? string.Empty : " hidden")">
                        @Html.DropDownListFor(o => o.State, Model.States, "State...", new { })
                        @Html.ValidationMessageFor(o => o.State)
                    </li>

                    <li class="col-12">
                        <div class="float-container">
                            <button type="submit" class="btn left primary">Save & continue</button>
                        </div>
                    </li>
                </ol>

                <div class="col-12 hidden">
                    <p class="hidden">If you would like to pickup and / or drop off the items you can do so from McKinnon</p>
                    @Html.RouteLink("Continue", Routes.Checkout.PickupHiredProducts, new { }, new { @class = "btn primary left pickup-button component" })
                </div>
    
            
            }

        </div>

    </div>
</div>
