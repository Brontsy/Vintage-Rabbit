@model Vintage.Rabbit.Admin.Web.Models.Products.ProductViewModel
@using Vintage.Rabbit.Common.Enums;
@{
    ViewBag.Title = "List";
}

<div class="page-head">

    <h2>Add Product</h2>
    <ol class="breadcrumbs">
        <li>@Html.RouteLink("Home", Routes.Home)</li>
        <li>@Html.RouteLink("Products", Routes.Products.List)</li>
        <li class="active">Add</li>
    </ol>
</div>
<div class="body-content edit-product">
    <div class="tab-container">
        <ul class="nav nav-tabs">
            <li class="active">@Html.RouteLink("Details", Routes.Products.Edit)</li>
            @if(Model.ProductId != 0)
            { 
            <li>
                <a href="@Url.RouteUrl(Routes.Products.Inventory, new { productId = Model.ProductId })">Inventory (@{Html.RenderAction("GetInventoryCount", "Products", new { productGuid = Model.ProductGuid });})</a>
            </li>
            }
        </ul>
        <div class="tab-content">
            <div class="tab-pane active cont" id="details">
                <div class="row">
                    <div class="col-5">
                        @using (Html.BeginRouteForm(Routes.Products.SaveProduct, new { productId = Model.ProductId }, FormMethod.Post, new { @class = (Model.Type.HasValue ? Model.Type.Value.ToString().ToLower() : "") }))
                        {
                            <fieldset>
                                <ol class="row">
                                    <li class="col-12">
                                        @Html.LabelFor(o => o.Code)
                                        @Html.TextBoxFor(o => o.Code, new { placeholder = "Code*" })
                                        @Html.ValidationMessageFor(o => o.Code)
                                    </li>
                                    <li class="col-12">
                                        @Html.LabelFor(o => o.Type)
                                        @Html.DropDownListFor(o => o.Type, Model.Types, "Product Type...", new { })
                                        @Html.ValidationMessageFor(o => o.Type)
                                    </li>
                                    <li class="col-12">
                                        @Html.LabelFor(o => o.Title)
                                        @Html.TextBoxFor(o => o.Title, new { placeholder = "Title*" })
                                        @Html.ValidationMessageFor(o => o.Title)
                                    </li>
                                    <li class="col-12">
                                        @Html.LabelFor(o => o.Description)
                                        @Html.TextAreaFor(o => o.Description, new { placeholder = "Description" })
                                        @Html.ValidationMessageFor(o => o.Description)
                                    </li>
                                    <li class="col-12">
                                        @Html.LabelFor(o => o.Keywords)
                                        @Html.TextBoxFor(o => o.Keywords, new { placeholder = "Keywords*" })
                                        @Html.ValidationMessageFor(o => o.Keywords)
                                    </li>
                                    <li class="col-12">
                                        @Html.LabelFor(o => o.Cost)
                                        @Html.TextBoxFor(o => o.Cost, new { placeholder = "Price*" })
                                        @Html.ValidationMessageFor(o => o.Cost)
                                    </li>
                                    <li class="col-12 checkbox-container">
                                        @Html.CheckBoxFor(o => o.IsFeatured)
                                        @Html.LabelFor(o => o.IsFeatured)
                                        @Html.HiddenFor(o => Model.IsFeatured)
                                    </li>

                                    <li class="col-12">


                                        <h3><strong>Categories</strong></h3>
                                        <ul class="categories row">

                                            @for (int i = 0; i < Model.Categories.Count; i++)
{
    <li class="checkbox-container col-6 @(Model.Categories[i].ProductType == ProductType.Buy ? " buy" : string.Empty)@(Model.Categories[i].ProductType == ProductType.Hire ? " hire" : string.Empty)">
        @Html.CheckBoxFor(o => o.Categories[i].Selected)
        @Html.LabelFor(o => o.Categories[i].Selected, Model.Categories[i].DisplayName)
        @Html.HiddenFor(o => Model.Categories[i].Id)

        @if (Model.Categories[i].Children.Any())
        {
            <div class="row child-checkboxes">
                @for (int j = 0; j < Model.Categories[i].Children.Count; j++)
{
    <div class="checkbox-container col-6@(Model.Categories[i].Children[j].ProductType == ProductType.Buy ? " buy" : string.Empty)@(Model.Categories[i].Children[j].ProductType == ProductType.Hire ? " hire" : string.Empty)">
        @Html.CheckBoxFor(o => o.Categories[i].Children[j].Selected)
        @Html.LabelFor(o => o.Categories[i].Children[j].Selected, Model.Categories[i].Children[j].DisplayName)
        @Html.HiddenFor(o => Model.Categories[i].Children[j].Id)
    </div>

}
            </div>
        }
    </li>
}

                                        </ul>
                                    </li>

                                    <li class="col-4 offset-8">
                                        <button type="submit" class="btn primary">Save & continue</button>
                                    </li>
                                </ol>
                            </fieldset>
                        }
                    </div>

                    @if (Model.ProductId != 0)
                    {
                        <div class="col-6 offset-1 photo-uploader">
                            <div class="upload-photos">

                                <button class="btn primary" id="pickfiles">Upload Photos</button>

                                <ol class="photo-list row">
                                    @foreach (var image in Model.ImageUrls)
                                    {
                                        Html.RenderPartial("Photo", image);
                                    }
                                </ol>

                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

    </div>
</div>
<script type="text/javascript">

    $('.upload-photos').photoUploader(
        {
            uploadUrl: '@Url.RouteUrl(Routes.Products.UploadPhoto, new {  productId = Model.ProductId })'
        });

</script>